{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chann\\\\my-personal-webpage\\\\src\\\\components\\\\ProjectCard.tsx\";\n// src/components/ProjectCard.tsx\nimport React from 'react';\n// No need to import PropTypes\n\n// Import CSS - Make sure your build process handles CSS imports\nimport './ProjectCard.css';\n\n// Define the interface for the component's props\n// Note: We can directly define the expected props here\n// or import/use the 'Project' type if the props match exactly.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Use React.FC (Functional Component) and type the props\nconst ProjectCard = ({\n  title,\n  description,\n  imageUrl,\n  technologies = [],\n  // Default value for optional array\n  liveUrl,\n  repoUrl\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-card\",\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: `${title} screenshot`,\n      className: \"project-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"project-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), technologies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-technologies\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Technologies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: technologies.map((tech, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"tech-tag\",\n            children: tech\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-links\",\n        children: [liveUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: liveUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"project-link live-link\",\n          children: \"Live Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), repoUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: repoUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"project-link repo-link\",\n          children: \"View Webpage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// PropTypes are replaced by the TypeScript interface definition\n// Default props can be handled via default parameter values in destructuring (as shown for technologies)\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProjectCard","title","description","imageUrl","technologies","liveUrl","repoUrl","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","map","tech","index","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/chann/my-personal-webpage/src/components/ProjectCard.tsx"],"sourcesContent":["// src/components/ProjectCard.tsx\r\nimport React from 'react';\r\n// No need to import PropTypes\r\n\r\n// Import CSS - Make sure your build process handles CSS imports\r\nimport './ProjectCard.css';\r\n\r\n// Define the interface for the component's props\r\n// Note: We can directly define the expected props here\r\n// or import/use the 'Project' type if the props match exactly.\r\ninterface ProjectCardProps {\r\n  title: string;\r\n  description: string;\r\n  imageUrl?: string; // Optional\r\n  technologies?: string[]; // Optional\r\n  liveUrl?: string; // Optional\r\n  repoUrl?: string; // Optional\r\n}\r\n\r\n// Use React.FC (Functional Component) and type the props\r\nconst ProjectCard: React.FC<ProjectCardProps> = ({\r\n  title,\r\n  description,\r\n  imageUrl,\r\n  technologies = [], // Default value for optional array\r\n  liveUrl,\r\n  repoUrl\r\n}) => {\r\n  return (\r\n    <div className=\"project-card\">\r\n      {/* Conditionally render the image */}\r\n      {imageUrl && (\r\n        <img src={imageUrl} alt={`${title} screenshot`} className=\"project-image\" />\r\n      )}\r\n      <div className=\"project-content\">\r\n        <h3 className=\"project-title\">{title}</h3>\r\n        <p className=\"project-description\">{description}</p>\r\n\r\n        {/* Render technologies only if the array is not empty */}\r\n        {technologies.length > 0 && (\r\n          <div className=\"project-technologies\">\r\n            <strong>Technologies:</strong>\r\n            <ul>\r\n              {technologies.map((tech, index) => (\r\n                <li key={index} className=\"tech-tag\">{tech}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"project-links\">\r\n          {/* Conditionally render links */}\r\n          {liveUrl && (\r\n            <a href={liveUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link live-link\">\r\n              Live Demo\r\n            </a>\r\n          )}\r\n          {repoUrl && (\r\n            <a href={repoUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link repo-link\">\r\n              View Webpage\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// PropTypes are replaced by the TypeScript interface definition\r\n// Default props can be handled via default parameter values in destructuring (as shown for technologies)\r\n\r\nexport default ProjectCard;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA;AACA,OAAO,mBAAmB;;AAE1B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUA;AACA,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,KAAK;EACLC,WAAW;EACXC,QAAQ;EACRC,YAAY,GAAG,EAAE;EAAE;EACnBC,OAAO;EACPC;AACF,CAAC,KAAK;EACJ,oBACEP,OAAA;IAAKQ,SAAS,EAAC,cAAc;IAAAC,QAAA,GAE1BL,QAAQ,iBACPJ,OAAA;MAAKU,GAAG,EAAEN,QAAS;MAACO,GAAG,EAAE,GAAGT,KAAK,aAAc;MAACM,SAAS,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5E,eACDf,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BT,OAAA;QAAIQ,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEP;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1Cf,OAAA;QAAGQ,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEN;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGnDV,YAAY,CAACW,MAAM,GAAG,CAAC,iBACtBhB,OAAA;QAAKQ,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCT,OAAA;UAAAS,QAAA,EAAQ;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9Bf,OAAA;UAAAS,QAAA,EACGJ,YAAY,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BnB,OAAA;YAAgBQ,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAES;UAAI,GAAjCC,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiC,CAChD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACN,eAEDf,OAAA;QAAKQ,SAAS,EAAC,eAAe;QAAAC,QAAA,GAE3BH,OAAO,iBACNN,OAAA;UAAGoB,IAAI,EAAEd,OAAQ;UAACe,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAACd,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAE/F;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ,EACAR,OAAO,iBACNP,OAAA;UAAGoB,IAAI,EAAEb,OAAQ;UAACc,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAACd,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAE/F;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AACA;AAAAQ,EAAA,GAjDMtB,WAAuC;AAmD7C,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}