{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chann\\\\my-personal-webpage\\\\src\\\\components\\\\Projects.tsx\";\n// src/App.tsx\nimport React from 'react';\nimport ProjectList from './ProjectList';\nimport './App.css'; // Your main app styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// --- Sample Project Data ---\n// Explicitly type the array using the Project interface\nconst myProjects = [{\n  id: 1,\n  // Use string or number\n  title: 'Personal Portfolio Website',\n  description: 'The website you are currently viewing! Built with React & TypeScript, showcasing my projects and skills.',\n  imageUrl: '../imgs/file.png',\n  // Path relative to public folder or absolute URL\n  technologies: ['React', 'TypeScript', 'HTML', 'CSS']\n}, {\n  id: 2,\n  // Example using number ID\n  title: 'Bible In A Year',\n  description: 'A web application to generate a yearlong Bible reading plan starting from any date',\n  imageUrl: '../imgs/bible.png',\n  technologies: ['HTML', 'CSS', 'JavaScript'],\n  repoUrl: 'https://bibleinayear.github.io' // Replace\n}, {\n  id: 3,\n  title: 'Argos (Project Glass Wall)',\n  description: 'A simple web application to check the current weather and forecast for a city using a third-party API.',\n  imageUrl: '../imgs/argos.png',\n  technologies: ['HTML', 'CSS', 'Javascript', 'Python', 'Flask', 'OpenCV', 'YOLOv10'],\n  repoUrl: 'https://projectglasswall.github.io' // Replace\n}\n\n// Add more projects here...\n];\n// --- End Sample Data ---\n\n// Define the App component using standard function syntax or React.FC\nfunction App() {\n  // Return type is JSX.Element\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: myProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n// Alternative using React.FC\n// const App: React.FC = () => { ... return (...); };\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ProjectList","jsxDEV","_jsxDEV","myProjects","id","title","description","imageUrl","technologies","repoUrl","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","projects","_c","$RefreshReg$"],"sources":["C:/Users/chann/my-personal-webpage/src/components/Projects.tsx"],"sourcesContent":["// src/App.tsx\r\nimport React from 'react';\r\nimport ProjectList from './ProjectList';\r\n\r\nimport './App.css'; // Your main app styles\r\nexport type Project = { // Use 'export' if you need this type outside this file (e.g., in App.tsx)\r\n  id: string | number;\r\n  title: string;\r\n  description: string;\r\n  imageUrl?: string;\r\n  technologies?: string[];\r\n  liveUrl?: string;\r\n  repoUrl?: string;\r\n};\r\n// --- Sample Project Data ---\r\n// Explicitly type the array using the Project interface\r\nconst myProjects: Project[] = [\r\n  {\r\n    id: 1, // Use string or number\r\n    title: 'Personal Portfolio Website',\r\n    description: 'The website you are currently viewing! Built with React & TypeScript, showcasing my projects and skills.',\r\n    imageUrl: '../imgs/file.png', // Path relative to public folder or absolute URL\r\n    technologies: ['React', 'TypeScript', 'HTML', 'CSS',],\r\n  },\r\n  {\r\n    id: 2, // Example using number ID\r\n    title: 'Bible In A Year',\r\n    description: 'A web application to generate a yearlong Bible reading plan starting from any date',\r\n    imageUrl: '../imgs/bible.png',\r\n    technologies: ['HTML', 'CSS', 'JavaScript'],\r\n    repoUrl: 'https://bibleinayear.github.io', // Replace\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Argos (Project Glass Wall)',\r\n    description: 'A simple web application to check the current weather and forecast for a city using a third-party API.',\r\n    imageUrl: '../imgs/argos.png',\r\n    technologies: ['HTML', 'CSS', 'Javascript', 'Python', 'Flask','OpenCV', 'YOLOv10'],\r\n    repoUrl: 'https://projectglasswall.github.io', // Replace\r\n  },\r\n  \r\n  // Add more projects here...\r\n];\r\n// --- End Sample Data ---\r\n\r\n// Define the App component using standard function syntax or React.FC\r\nfunction App(): JSX.Element { // Return type is JSX.Element\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        <h2>My Projects</h2>\r\n        {/* Pass the typed projects array */}\r\n        <ProjectList projects={myProjects} />\r\n\r\n        {/* Example: Render the component without passing props (uses default []) */}\r\n        {/* <h2>Empty List Example</h2> */}\r\n        {/* <ProjectList /> */}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Alternative using React.FC\r\n// const App: React.FC = () => { ... return (...); };\r\n\r\nexport default App;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAEvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUpB;AACA;AACA,MAAMC,UAAqB,GAAG,CAC5B;EACEC,EAAE,EAAE,CAAC;EAAE;EACPC,KAAK,EAAE,4BAA4B;EACnCC,WAAW,EAAE,0GAA0G;EACvHC,QAAQ,EAAE,kBAAkB;EAAE;EAC9BC,YAAY,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK;AACrD,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EAAE;EACPC,KAAK,EAAE,iBAAiB;EACxBC,WAAW,EAAE,oFAAoF;EACjGC,QAAQ,EAAE,mBAAmB;EAC7BC,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC;EAC3CC,OAAO,EAAE,gCAAgC,CAAE;AAC7C,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,4BAA4B;EACnCC,WAAW,EAAE,wGAAwG;EACrHC,QAAQ,EAAE,mBAAmB;EAC7BC,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAC,QAAQ,EAAE,SAAS,CAAC;EAClFC,OAAO,EAAE,oCAAoC,CAAE;AACjD;;AAEA;AAAA,CACD;AACD;;AAEA;AACA,SAASC,GAAGA,CAAA,EAAgB;EAAE;EAC5B,oBACER,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpBd,OAAA,CAACF,WAAW;QAACiB,QAAQ,EAAEd;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;;AAEA;AACA;AAAAE,EAAA,GAjBSR,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}